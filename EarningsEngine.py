# encoding: utf-8

# Copyright (c)  - All rights reserved.
# Unintended redistribution can be punishable by law.
# By reading this message, you are automatically consenting to it
# and you are accepting that the financial data might be incorrect.
# The financial data generated by this script is for informational purposes only
# and should not be considered as investment advice.
# Use at your own risk.



# Data Manipulation Modules
import pandas as pd



def get_net_income (stock, ticker, reporting_period='TTM'):
    """
    Fetches the net income from the quarterly financials as TTM or latest annual net income.
    Net income is the total profit of a company after all expenses, taxes, and costs have been deducted from total revenue.
    It is calculated as Revenues - COGS - SGA - Interest - Taxes = Net Income.

    Parameters:
        stock (object): The stock object containing financial data.
        ticker (str): The stock ticker symbol.
        reporting_period (str): The reporting period, either 'TTM' (Trailing Twelve Months) or 'Annual'.

    Returns:
        net_income (float): The net income for the specified reporting period.

    """
    
    net_income = None


    if 'ttm' == reporting_period.lower():

        # Fetch Quarterly Income Statement data
        income_statement_quart = stock.quarterly_financials.T  # Transpose to have dates as rows

        # Check if 'Net Income' is available in the income statement
        if 'Net Income' not in income_statement_quart:
            raise ValueError (f"Cannot calculate Net Income TTM! Net Income data is missing in the Quarterly Income Statement (Ticker: {ticker}).")

        # Fetch the last 4 quarters of net income
        net_income_list = income_statement_quart['Net Income'].tolist()   # Convert to list for easier indexing

        # Remove all NaN values from the list
        net_income_list = [net_income for net_income in net_income_list if not pd.isna(net_income)]

        # Check if we have at least 4 quarters of data for TTM calculation
        if len(net_income_list) < 4:
            raise ValueError (f"Cannot calculate Net Income TTM! Not enough Net Income Quarterly data is available (Ticker: {ticker}). \n Data for at least 4 quarters is required .")
        
        # Calculate TTM Net Income from the last 4 quarters
        # Latest quarter is the 0th index in the list
        net_income_ttm = sum(net_income_list[:4])

        net_income = net_income_ttm


    elif 'annual' == reporting_period.lower():

        # Fetch the Annual Income Statement data
        income_statement_annual = stock.financials.T   # Transpose to have dates as rows

        # Check if 'Net Income' is available in the income statement
        if 'Net Income' not in income_statement_annual:
            raise ValueError (f"Cannot fetch Annual Net Income! Net Income data is missing in the Annual Income Statement (Ticker: {ticker}).")

        net_income_list = income_statement_annual['Net Income'].tolist()  # Convert to list for easier indexing

        # Remove all NaN values from the list
        net_income_list = [net_income for net_income in net_income_list if not pd.isna(net_income)]

        # Check if we have at least 1 year of annual data
        if len(net_income_list) < 1:
            raise ValueError (f"Cannot fetch Annual Net Income! No Net Income annual data is available in the Annual Income Statement (Ticker: {ticker}). \n Data for at least 1 year is required .") 
    
        # Get the latest annual net income
        # Latest annual net income is the 0th index in the list
        net_income = net_income_list[0]

    return net_income
