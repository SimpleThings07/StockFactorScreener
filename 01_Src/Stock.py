# encoding: utf-8

# Copyright (c) Ivan AntunoviÄ‡ (ivantun05@gmail.com) - All rights reserved.
# Unintended redistribution can be punishable by law.
# By reading this message, you are automatically consenting to it
# and you are accepting that the financial data might be incorrect.
# The financial data generated by this script is for informational purposes only
# and should not be considered as investment advice.
# Use at your own risk.

from typing import Optional

class Stock():

    def __init__(
        self,
        ticker: str,
        sector: str,
        value_metrics: object,
        profitability_metrics: object,
        growth_metrics: object,
        safety_metrics: object
    ):

        # Stock attributes
        self.ticker: str = ticker                                               # Stock ticker symbol
        self.sector: str = sector                                               # Sector of the stock (e.g., Technology, Healthcare, Financial Services, Industrials, etc.)

        # Financial metrics
        self.value_metrics: object = value_metrics                              # Value metrics (P/B, P/E, etc.)
        self.profitability_metrics: object = profitability_metrics              # Profitability metrics
        self.growth_metrics: object = growth_metrics                            # Profitability Growth metrics
        self.safety_metrics: object = safety_metrics                            # Safety metrics

        # Z-score results (will be set after calculation)
        self.value_z_score_result: Optional["ZScoreResult"] = None              # Value Z-score result (will be set after calculation)
        self.profitability_z_score_result: Optional["ZScoreResult"] = None      # Profitability Z-score result (will be set after calculation)
        self.growth_z_score_result: Optional["ZScoreResult"] = None             # Growth Z-score result (will be set after calculation)